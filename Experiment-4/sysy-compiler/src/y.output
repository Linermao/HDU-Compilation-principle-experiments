Nonterminals useless in grammar

    FuncDef
    FuncType


Terminals unused in grammar

    THEN
    LBRACKET
    RBRACKET


Rules useless in grammar

   80 FuncDef: FuncType IDENT LPAREN RPAREN Block
   81        | FuncType IDENT LPAREN FuncFParams RPAREN Block

   82 FuncType: INT
   83         | VOID


State 139 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompUnits

    2 CompUnits: FuncDefOrVarDecl
    3          | ConstDecl
    4          | CompUnits FuncDefOrVarDecl
    5          | CompUnits ConstDecl
    6          | VOID FuncDef_
    7          | CompUnits VOID FuncDef_

    8 FuncDefOrVarDecl: BType FuncDef_
    9                 | BType VarDecl_

   10 Decl: ConstDecl
   11     | VarDecl

   12 ConstDecl: CONST BType ConstDef SEMI

   13 BType: INT

   14 ConstDef: IDENT ASSIGN ConstInitVal
   15         | IDENT ASSIGN ConstInitVal COMMA ConstDef

   16 ConstInitVal: ConstExp

   17 ConstExp: Exp

   18 VarDecl: BType VarDef SEMI

   19 VarDecl_: VarDef SEMI

   20 VarDef: IDENT
   21       | IDENT ASSIGN InitVal
   22       | IDENT COMMA VarDef
   23       | IDENT ASSIGN InitVal COMMA VarDef

   24 InitVal: Exp

   25 FuncDef_: IDENT LPAREN RPAREN Block
   26         | IDENT LPAREN FuncFParams RPAREN Block

   27 FuncFParams: FuncFParam

   28 FuncFParam: BType IDENT
   29           | BType IDENT COMMA FuncFParam

   30 Block: LBRACE BlockItem RBRACE

   31 BlockItem: Decl
   32          | Stmt
   33          | Decl BlockItem
   34          | Stmt BlockItem

   35 Stmt: LVal ASSIGN Exp SEMI
   36     | SEMI
   37     | Exp SEMI
   38     | Block
   39     | RETURN SEMI
   40     | RETURN Exp SEMI
   41     | IF LPAREN Exp RPAREN Stmt
   42     | IF LPAREN Exp RPAREN Stmt ELSE Stmt
   43     | WHILE LPAREN Exp RPAREN Stmt
   44     | BREAK SEMI
   45     | CONTINUE SEMI

   46 Exp: LOrExp
   47    | COMMA Exp

   48 LVal: IDENT

   49 PrimaryExp: LPAREN Exp RPAREN
   50           | Number
   51           | LVal

   52 Number: INT_CONST

   53 UnaryExp: PrimaryExp
   54         | UnaryOp UnaryExp
   55         | IDENT LPAREN RPAREN
   56         | IDENT LPAREN FuncRParams RPAREN

   57 UnaryOp: ADD
   58        | SUB
   59        | '!'

   60 FuncRParams: Exp

   61 MulExp: UnaryExp
   62       | MulExp MUL UnaryExp
   63       | MulExp DIV UnaryExp
   64       | MulExp MOD UnaryExp

   65 AddExp: MulExp
   66       | AddExp ADD MulExp
   67       | AddExp SUB MulExp

   68 RelExp: AddExp
   69       | RelExp '<' AddExp
   70       | RelExp '>' AddExp
   71       | RelExp LE AddExp
   72       | RelExp GE AddExp

   73 EqExp: RelExp
   74      | EqExp EQ RelExp
   75      | EqExp NE RelExp

   76 LAndExp: EqExp
   77        | LAndExp AND EqExp

   78 LOrExp: LAndExp
   79       | LOrExp OR LAndExp


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 59
    '<' (60) 69
    '>' (62) 70
    error (256)
    IDENT <str_val> (258) 14 15 20 21 22 23 25 26 28 29 48 55 56
    INT <str_val> (259) 13
    RETURN <str_val> (260) 39 40
    CONST <str_val> (261) 12
    VOID <str_val> (262) 6 7
    LE <str_val> (263) 71
    GE <str_val> (264) 72
    EQ <str_val> (265) 74
    NE <str_val> (266) 75
    AND <str_val> (267) 77
    OR <str_val> (268) 79
    IF <str_val> (269) 41 42
    THEN <str_val> (270)
    ELSE <str_val> (271) 42
    WHILE <str_val> (272) 43
    CONTINUE <str_val> (273) 45
    BREAK <str_val> (274) 44
    ADD <str_val> (275) 57 66
    SUB <str_val> (276) 58 67
    MUL <str_val> (277) 62
    DIV <str_val> (278) 63
    MOD <str_val> (279) 64
    ASSIGN <str_val> (280) 14 15 21 23 35
    SEMI <str_val> (281) 12 18 19 35 36 37 39 40 44 45
    COMMA <str_val> (282) 15 22 23 29 47
    LPAREN <str_val> (283) 25 26 41 42 43 49 55 56
    RPAREN <str_val> (284) 25 26 41 42 43 49 55 56
    LBRACE <str_val> (285) 30
    RBRACE <str_val> (286) 30
    LBRACKET <str_val> (287)
    RBRACKET <str_val> (288)
    INT_CONST <int_val> (289) 52


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    CompUnit (39)
        on left: 1
        on right: 0
    CompUnits <ast_val> (40)
        on left: 2 3 4 5 6 7
        on right: 1 4 5 7
    FuncDefOrVarDecl <ast_val> (41)
        on left: 8 9
        on right: 2 4
    Decl <ast_val> (42)
        on left: 10 11
        on right: 31 33
    ConstDecl <ast_val> (43)
        on left: 12
        on right: 3 5 10
    BType <ast_val> (44)
        on left: 13
        on right: 8 9 12 18 28 29
    ConstDef <ast_val> (45)
        on left: 14 15
        on right: 12 15
    ConstInitVal <ast_val> (46)
        on left: 16
        on right: 14 15
    ConstExp <ast_val> (47)
        on left: 17
        on right: 16
    VarDecl <ast_val> (48)
        on left: 18
        on right: 11
    VarDecl_ <ast_val> (49)
        on left: 19
        on right: 9
    VarDef <ast_val> (50)
        on left: 20 21 22 23
        on right: 18 19 22 23
    InitVal <ast_val> (51)
        on left: 24
        on right: 21 23
    FuncDef_ <ast_val> (52)
        on left: 25 26
        on right: 6 7 8
    FuncFParams <ast_val> (53)
        on left: 27
        on right: 26
    FuncFParam <ast_val> (54)
        on left: 28 29
        on right: 27 29
    Block <ast_val> (55)
        on left: 30
        on right: 25 26 38
    BlockItem <ast_val> (56)
        on left: 31 32 33 34
        on right: 30 33 34
    Stmt <ast_val> (57)
        on left: 35 36 37 38 39 40 41 42 43 44 45
        on right: 32 34 41 42 43
    Exp <ast_val> (58)
        on left: 46 47
        on right: 17 24 35 37 40 41 42 43 47 49 60
    LVal <ast_val> (59)
        on left: 48
        on right: 35 51
    PrimaryExp <ast_val> (60)
        on left: 49 50 51
        on right: 53
    Number <ast_val> (61)
        on left: 52
        on right: 50
    UnaryExp <ast_val> (62)
        on left: 53 54 55 56
        on right: 54 61 62 63 64
    UnaryOp <str_val> (63)
        on left: 57 58 59
        on right: 54
    FuncRParams <ast_val> (64)
        on left: 60
        on right: 56
    MulExp <ast_val> (65)
        on left: 61 62 63 64
        on right: 62 63 64 65 66 67
    AddExp <ast_val> (66)
        on left: 65 66 67
        on right: 66 67 68 69 70 71 72
    RelExp <ast_val> (67)
        on left: 68 69 70 71 72
        on right: 69 70 71 72 73 74 75
    EqExp <ast_val> (68)
        on left: 73 74 75
        on right: 74 75 76 77
    LAndExp <ast_val> (69)
        on left: 76 77
        on right: 77 78 79
    LOrExp <ast_val> (70)
        on left: 78 79
        on right: 46 79


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompUnit          go to state 4
    CompUnits         go to state 5
    FuncDefOrVarDecl  go to state 6
    ConstDecl         go to state 7
    BType             go to state 8


State 1

   13 BType: INT .

    $default  reduce using rule 13 (BType)


State 2

   12 ConstDecl: CONST . BType ConstDef SEMI

    INT  shift, and go to state 1

    BType  go to state 9


State 3

    6 CompUnits: VOID . FuncDef_

    IDENT  shift, and go to state 10

    FuncDef_  go to state 11


State 4

    0 $accept: CompUnit . $end

    $end  shift, and go to state 12


State 5

    1 CompUnit: CompUnits .
    4 CompUnits: CompUnits . FuncDefOrVarDecl
    5          | CompUnits . ConstDecl
    7          | CompUnits . VOID FuncDef_

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 13

    $default  reduce using rule 1 (CompUnit)

    FuncDefOrVarDecl  go to state 14
    ConstDecl         go to state 15
    BType             go to state 8


State 6

    2 CompUnits: FuncDefOrVarDecl .

    $default  reduce using rule 2 (CompUnits)


State 7

    3 CompUnits: ConstDecl .

    $default  reduce using rule 3 (CompUnits)


State 8

    8 FuncDefOrVarDecl: BType . FuncDef_
    9                 | BType . VarDecl_

    IDENT  shift, and go to state 16

    VarDecl_  go to state 17
    VarDef    go to state 18
    FuncDef_  go to state 19


State 9

   12 ConstDecl: CONST BType . ConstDef SEMI

    IDENT  shift, and go to state 20

    ConstDef  go to state 21


State 10

   25 FuncDef_: IDENT . LPAREN RPAREN Block
   26         | IDENT . LPAREN FuncFParams RPAREN Block

    LPAREN  shift, and go to state 22


State 11

    6 CompUnits: VOID FuncDef_ .

    $default  reduce using rule 6 (CompUnits)


State 12

    0 $accept: CompUnit $end .

    $default  accept


State 13

    7 CompUnits: CompUnits VOID . FuncDef_

    IDENT  shift, and go to state 10

    FuncDef_  go to state 23


State 14

    4 CompUnits: CompUnits FuncDefOrVarDecl .

    $default  reduce using rule 4 (CompUnits)


State 15

    5 CompUnits: CompUnits ConstDecl .

    $default  reduce using rule 5 (CompUnits)


State 16

   20 VarDef: IDENT .
   21       | IDENT . ASSIGN InitVal
   22       | IDENT . COMMA VarDef
   23       | IDENT . ASSIGN InitVal COMMA VarDef
   25 FuncDef_: IDENT . LPAREN RPAREN Block
   26         | IDENT . LPAREN FuncFParams RPAREN Block

    ASSIGN  shift, and go to state 24
    COMMA   shift, and go to state 25
    LPAREN  shift, and go to state 22

    $default  reduce using rule 20 (VarDef)


State 17

    9 FuncDefOrVarDecl: BType VarDecl_ .

    $default  reduce using rule 9 (FuncDefOrVarDecl)


State 18

   19 VarDecl_: VarDef . SEMI

    SEMI  shift, and go to state 26


State 19

    8 FuncDefOrVarDecl: BType FuncDef_ .

    $default  reduce using rule 8 (FuncDefOrVarDecl)


State 20

   14 ConstDef: IDENT . ASSIGN ConstInitVal
   15         | IDENT . ASSIGN ConstInitVal COMMA ConstDef

    ASSIGN  shift, and go to state 27


State 21

   12 ConstDecl: CONST BType ConstDef . SEMI

    SEMI  shift, and go to state 28


State 22

   25 FuncDef_: IDENT LPAREN . RPAREN Block
   26         | IDENT LPAREN . FuncFParams RPAREN Block

    INT     shift, and go to state 1
    RPAREN  shift, and go to state 29

    BType        go to state 30
    FuncFParams  go to state 31
    FuncFParam   go to state 32


State 23

    7 CompUnits: CompUnits VOID FuncDef_ .

    $default  reduce using rule 7 (CompUnits)


State 24

   21 VarDef: IDENT ASSIGN . InitVal
   23       | IDENT ASSIGN . InitVal COMMA VarDef

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    InitVal     go to state 40
    Exp         go to state 41
    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 25

   22 VarDef: IDENT COMMA . VarDef

    IDENT  shift, and go to state 53

    VarDef  go to state 54


State 26

   19 VarDecl_: VarDef SEMI .

    $default  reduce using rule 19 (VarDecl_)


State 27

   14 ConstDef: IDENT ASSIGN . ConstInitVal
   15         | IDENT ASSIGN . ConstInitVal COMMA ConstDef

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    ConstInitVal  go to state 55
    ConstExp      go to state 56
    Exp           go to state 57
    LVal          go to state 42
    PrimaryExp    go to state 43
    Number        go to state 44
    UnaryExp      go to state 45
    UnaryOp       go to state 46
    MulExp        go to state 47
    AddExp        go to state 48
    RelExp        go to state 49
    EqExp         go to state 50
    LAndExp       go to state 51
    LOrExp        go to state 52


State 28

   12 ConstDecl: CONST BType ConstDef SEMI .

    $default  reduce using rule 12 (ConstDecl)


State 29

   25 FuncDef_: IDENT LPAREN RPAREN . Block

    LBRACE  shift, and go to state 58

    Block  go to state 59


State 30

   28 FuncFParam: BType . IDENT
   29           | BType . IDENT COMMA FuncFParam

    IDENT  shift, and go to state 60


State 31

   26 FuncDef_: IDENT LPAREN FuncFParams . RPAREN Block

    RPAREN  shift, and go to state 61


State 32

   27 FuncFParams: FuncFParam .

    $default  reduce using rule 27 (FuncFParams)


State 33

   48 LVal: IDENT .
   55 UnaryExp: IDENT . LPAREN RPAREN
   56         | IDENT . LPAREN FuncRParams RPAREN

    LPAREN  shift, and go to state 62

    $default  reduce using rule 48 (LVal)


State 34

   57 UnaryOp: ADD .

    $default  reduce using rule 57 (UnaryOp)


State 35

   58 UnaryOp: SUB .

    $default  reduce using rule 58 (UnaryOp)


State 36

   47 Exp: COMMA . Exp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    Exp         go to state 63
    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 37

   49 PrimaryExp: LPAREN . Exp RPAREN

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    Exp         go to state 64
    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 38

   52 Number: INT_CONST .

    $default  reduce using rule 52 (Number)


State 39

   59 UnaryOp: '!' .

    $default  reduce using rule 59 (UnaryOp)


State 40

   21 VarDef: IDENT ASSIGN InitVal .
   23       | IDENT ASSIGN InitVal . COMMA VarDef

    COMMA  shift, and go to state 65

    $default  reduce using rule 21 (VarDef)


State 41

   24 InitVal: Exp .

    $default  reduce using rule 24 (InitVal)


State 42

   51 PrimaryExp: LVal .

    $default  reduce using rule 51 (PrimaryExp)


State 43

   53 UnaryExp: PrimaryExp .

    $default  reduce using rule 53 (UnaryExp)


State 44

   50 PrimaryExp: Number .

    $default  reduce using rule 50 (PrimaryExp)


State 45

   61 MulExp: UnaryExp .

    $default  reduce using rule 61 (MulExp)


State 46

   54 UnaryExp: UnaryOp . UnaryExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 66
    UnaryOp     go to state 46


State 47

   62 MulExp: MulExp . MUL UnaryExp
   63       | MulExp . DIV UnaryExp
   64       | MulExp . MOD UnaryExp
   65 AddExp: MulExp .

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 65 (AddExp)


State 48

   66 AddExp: AddExp . ADD MulExp
   67       | AddExp . SUB MulExp
   68 RelExp: AddExp .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71

    $default  reduce using rule 68 (RelExp)


State 49

   69 RelExp: RelExp . '<' AddExp
   70       | RelExp . '>' AddExp
   71       | RelExp . LE AddExp
   72       | RelExp . GE AddExp
   73 EqExp: RelExp .

    LE   shift, and go to state 72
    GE   shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75

    $default  reduce using rule 73 (EqExp)


State 50

   74 EqExp: EqExp . EQ RelExp
   75      | EqExp . NE RelExp
   76 LAndExp: EqExp .

    EQ  shift, and go to state 76
    NE  shift, and go to state 77

    $default  reduce using rule 76 (LAndExp)


State 51

   77 LAndExp: LAndExp . AND EqExp
   78 LOrExp: LAndExp .

    AND  shift, and go to state 78

    $default  reduce using rule 78 (LOrExp)


State 52

   46 Exp: LOrExp .
   79 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 79

    $default  reduce using rule 46 (Exp)


State 53

   20 VarDef: IDENT .
   21       | IDENT . ASSIGN InitVal
   22       | IDENT . COMMA VarDef
   23       | IDENT . ASSIGN InitVal COMMA VarDef

    ASSIGN  shift, and go to state 24
    COMMA   shift, and go to state 25

    $default  reduce using rule 20 (VarDef)


State 54

   22 VarDef: IDENT COMMA VarDef .

    $default  reduce using rule 22 (VarDef)


State 55

   14 ConstDef: IDENT ASSIGN ConstInitVal .
   15         | IDENT ASSIGN ConstInitVal . COMMA ConstDef

    COMMA  shift, and go to state 80

    $default  reduce using rule 14 (ConstDef)


State 56

   16 ConstInitVal: ConstExp .

    $default  reduce using rule 16 (ConstInitVal)


State 57

   17 ConstExp: Exp .

    $default  reduce using rule 17 (ConstExp)


State 58

   30 Block: LBRACE . BlockItem RBRACE

    IDENT      shift, and go to state 33
    INT        shift, and go to state 1
    RETURN     shift, and go to state 81
    CONST      shift, and go to state 2
    IF         shift, and go to state 82
    WHILE      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    BREAK      shift, and go to state 85
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    SEMI       shift, and go to state 86
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    LBRACE     shift, and go to state 58
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    Decl        go to state 87
    ConstDecl   go to state 88
    BType       go to state 89
    VarDecl     go to state 90
    Block       go to state 91
    BlockItem   go to state 92
    Stmt        go to state 93
    Exp         go to state 94
    LVal        go to state 95
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 59

   25 FuncDef_: IDENT LPAREN RPAREN Block .

    $default  reduce using rule 25 (FuncDef_)


State 60

   28 FuncFParam: BType IDENT .
   29           | BType IDENT . COMMA FuncFParam

    COMMA  shift, and go to state 96

    $default  reduce using rule 28 (FuncFParam)


State 61

   26 FuncDef_: IDENT LPAREN FuncFParams RPAREN . Block

    LBRACE  shift, and go to state 58

    Block  go to state 97


State 62

   55 UnaryExp: IDENT LPAREN . RPAREN
   56         | IDENT LPAREN . FuncRParams RPAREN

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    RPAREN     shift, and go to state 98
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    Exp          go to state 99
    LVal         go to state 42
    PrimaryExp   go to state 43
    Number       go to state 44
    UnaryExp     go to state 45
    UnaryOp      go to state 46
    FuncRParams  go to state 100
    MulExp       go to state 47
    AddExp       go to state 48
    RelExp       go to state 49
    EqExp        go to state 50
    LAndExp      go to state 51
    LOrExp       go to state 52


State 63

   47 Exp: COMMA Exp .

    $default  reduce using rule 47 (Exp)


State 64

   49 PrimaryExp: LPAREN Exp . RPAREN

    RPAREN  shift, and go to state 101


State 65

   23 VarDef: IDENT ASSIGN InitVal COMMA . VarDef

    IDENT  shift, and go to state 53

    VarDef  go to state 102


State 66

   54 UnaryExp: UnaryOp UnaryExp .

    $default  reduce using rule 54 (UnaryExp)


State 67

   62 MulExp: MulExp MUL . UnaryExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 103
    UnaryOp     go to state 46


State 68

   63 MulExp: MulExp DIV . UnaryExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 104
    UnaryOp     go to state 46


State 69

   64 MulExp: MulExp MOD . UnaryExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 105
    UnaryOp     go to state 46


State 70

   66 AddExp: AddExp ADD . MulExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 106


State 71

   67 AddExp: AddExp SUB . MulExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 107


State 72

   71 RelExp: RelExp LE . AddExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 108


State 73

   72 RelExp: RelExp GE . AddExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 109


State 74

   69 RelExp: RelExp '<' . AddExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 110


State 75

   70 RelExp: RelExp '>' . AddExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 111


State 76

   74 EqExp: EqExp EQ . RelExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 112


State 77

   75 EqExp: EqExp NE . RelExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 113


State 78

   77 LAndExp: LAndExp AND . EqExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 114


State 79

   79 LOrExp: LOrExp OR . LAndExp

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 115


State 80

   15 ConstDef: IDENT ASSIGN ConstInitVal COMMA . ConstDef

    IDENT  shift, and go to state 20

    ConstDef  go to state 116


State 81

   39 Stmt: RETURN . SEMI
   40     | RETURN . Exp SEMI

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    SEMI       shift, and go to state 117
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    Exp         go to state 118
    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 82

   41 Stmt: IF . LPAREN Exp RPAREN Stmt
   42     | IF . LPAREN Exp RPAREN Stmt ELSE Stmt

    LPAREN  shift, and go to state 119


State 83

   43 Stmt: WHILE . LPAREN Exp RPAREN Stmt

    LPAREN  shift, and go to state 120


State 84

   45 Stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 121


State 85

   44 Stmt: BREAK . SEMI

    SEMI  shift, and go to state 122


State 86

   36 Stmt: SEMI .

    $default  reduce using rule 36 (Stmt)


State 87

   31 BlockItem: Decl .
   33          | Decl . BlockItem

    IDENT      shift, and go to state 33
    INT        shift, and go to state 1
    RETURN     shift, and go to state 81
    CONST      shift, and go to state 2
    IF         shift, and go to state 82
    WHILE      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    BREAK      shift, and go to state 85
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    SEMI       shift, and go to state 86
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    LBRACE     shift, and go to state 58
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    $default  reduce using rule 31 (BlockItem)

    Decl        go to state 87
    ConstDecl   go to state 88
    BType       go to state 89
    VarDecl     go to state 90
    Block       go to state 91
    BlockItem   go to state 123
    Stmt        go to state 93
    Exp         go to state 94
    LVal        go to state 95
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 88

   10 Decl: ConstDecl .

    $default  reduce using rule 10 (Decl)


State 89

   18 VarDecl: BType . VarDef SEMI

    IDENT  shift, and go to state 53

    VarDef  go to state 124


State 90

   11 Decl: VarDecl .

    $default  reduce using rule 11 (Decl)


State 91

   38 Stmt: Block .

    $default  reduce using rule 38 (Stmt)


State 92

   30 Block: LBRACE BlockItem . RBRACE

    RBRACE  shift, and go to state 125


State 93

   32 BlockItem: Stmt .
   34          | Stmt . BlockItem

    IDENT      shift, and go to state 33
    INT        shift, and go to state 1
    RETURN     shift, and go to state 81
    CONST      shift, and go to state 2
    IF         shift, and go to state 82
    WHILE      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    BREAK      shift, and go to state 85
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    SEMI       shift, and go to state 86
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    LBRACE     shift, and go to state 58
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    $default  reduce using rule 32 (BlockItem)

    Decl        go to state 87
    ConstDecl   go to state 88
    BType       go to state 89
    VarDecl     go to state 90
    Block       go to state 91
    BlockItem   go to state 126
    Stmt        go to state 93
    Exp         go to state 94
    LVal        go to state 95
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 94

   37 Stmt: Exp . SEMI

    SEMI  shift, and go to state 127


State 95

   35 Stmt: LVal . ASSIGN Exp SEMI
   51 PrimaryExp: LVal .

    ASSIGN  shift, and go to state 128

    $default  reduce using rule 51 (PrimaryExp)


State 96

   29 FuncFParam: BType IDENT COMMA . FuncFParam

    INT  shift, and go to state 1

    BType       go to state 30
    FuncFParam  go to state 129


State 97

   26 FuncDef_: IDENT LPAREN FuncFParams RPAREN Block .

    $default  reduce using rule 26 (FuncDef_)


State 98

   55 UnaryExp: IDENT LPAREN RPAREN .

    $default  reduce using rule 55 (UnaryExp)


State 99

   60 FuncRParams: Exp .

    $default  reduce using rule 60 (FuncRParams)


State 100

   56 UnaryExp: IDENT LPAREN FuncRParams . RPAREN

    RPAREN  shift, and go to state 130


State 101

   49 PrimaryExp: LPAREN Exp RPAREN .

    $default  reduce using rule 49 (PrimaryExp)


State 102

   23 VarDef: IDENT ASSIGN InitVal COMMA VarDef .

    $default  reduce using rule 23 (VarDef)


State 103

   62 MulExp: MulExp MUL UnaryExp .

    $default  reduce using rule 62 (MulExp)


State 104

   63 MulExp: MulExp DIV UnaryExp .

    $default  reduce using rule 63 (MulExp)


State 105

   64 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 64 (MulExp)


State 106

   62 MulExp: MulExp . MUL UnaryExp
   63       | MulExp . DIV UnaryExp
   64       | MulExp . MOD UnaryExp
   66 AddExp: AddExp ADD MulExp .

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 66 (AddExp)


State 107

   62 MulExp: MulExp . MUL UnaryExp
   63       | MulExp . DIV UnaryExp
   64       | MulExp . MOD UnaryExp
   67 AddExp: AddExp SUB MulExp .

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 67 (AddExp)


State 108

   66 AddExp: AddExp . ADD MulExp
   67       | AddExp . SUB MulExp
   71 RelExp: RelExp LE AddExp .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71

    $default  reduce using rule 71 (RelExp)


State 109

   66 AddExp: AddExp . ADD MulExp
   67       | AddExp . SUB MulExp
   72 RelExp: RelExp GE AddExp .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71

    $default  reduce using rule 72 (RelExp)


State 110

   66 AddExp: AddExp . ADD MulExp
   67       | AddExp . SUB MulExp
   69 RelExp: RelExp '<' AddExp .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71

    $default  reduce using rule 69 (RelExp)


State 111

   66 AddExp: AddExp . ADD MulExp
   67       | AddExp . SUB MulExp
   70 RelExp: RelExp '>' AddExp .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71

    $default  reduce using rule 70 (RelExp)


State 112

   69 RelExp: RelExp . '<' AddExp
   70       | RelExp . '>' AddExp
   71       | RelExp . LE AddExp
   72       | RelExp . GE AddExp
   74 EqExp: EqExp EQ RelExp .

    LE   shift, and go to state 72
    GE   shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75

    $default  reduce using rule 74 (EqExp)


State 113

   69 RelExp: RelExp . '<' AddExp
   70       | RelExp . '>' AddExp
   71       | RelExp . LE AddExp
   72       | RelExp . GE AddExp
   75 EqExp: EqExp NE RelExp .

    LE   shift, and go to state 72
    GE   shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75

    $default  reduce using rule 75 (EqExp)


State 114

   74 EqExp: EqExp . EQ RelExp
   75      | EqExp . NE RelExp
   77 LAndExp: LAndExp AND EqExp .

    EQ  shift, and go to state 76
    NE  shift, and go to state 77

    $default  reduce using rule 77 (LAndExp)


State 115

   77 LAndExp: LAndExp . AND EqExp
   79 LOrExp: LOrExp OR LAndExp .

    AND  shift, and go to state 78

    $default  reduce using rule 79 (LOrExp)


State 116

   15 ConstDef: IDENT ASSIGN ConstInitVal COMMA ConstDef .

    $default  reduce using rule 15 (ConstDef)


State 117

   39 Stmt: RETURN SEMI .

    $default  reduce using rule 39 (Stmt)


State 118

   40 Stmt: RETURN Exp . SEMI

    SEMI  shift, and go to state 131


State 119

   41 Stmt: IF LPAREN . Exp RPAREN Stmt
   42     | IF LPAREN . Exp RPAREN Stmt ELSE Stmt

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    Exp         go to state 132
    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 120

   43 Stmt: WHILE LPAREN . Exp RPAREN Stmt

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    Exp         go to state 133
    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 121

   45 Stmt: CONTINUE SEMI .

    $default  reduce using rule 45 (Stmt)


State 122

   44 Stmt: BREAK SEMI .

    $default  reduce using rule 44 (Stmt)


State 123

   33 BlockItem: Decl BlockItem .

    $default  reduce using rule 33 (BlockItem)


State 124

   18 VarDecl: BType VarDef . SEMI

    SEMI  shift, and go to state 134


State 125

   30 Block: LBRACE BlockItem RBRACE .

    $default  reduce using rule 30 (Block)


State 126

   34 BlockItem: Stmt BlockItem .

    $default  reduce using rule 34 (BlockItem)


State 127

   37 Stmt: Exp SEMI .

    $default  reduce using rule 37 (Stmt)


State 128

   35 Stmt: LVal ASSIGN . Exp SEMI

    IDENT      shift, and go to state 33
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    Exp         go to state 135
    LVal        go to state 42
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 129

   29 FuncFParam: BType IDENT COMMA FuncFParam .

    $default  reduce using rule 29 (FuncFParam)


State 130

   56 UnaryExp: IDENT LPAREN FuncRParams RPAREN .

    $default  reduce using rule 56 (UnaryExp)


State 131

   40 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 40 (Stmt)


State 132

   41 Stmt: IF LPAREN Exp . RPAREN Stmt
   42     | IF LPAREN Exp . RPAREN Stmt ELSE Stmt

    RPAREN  shift, and go to state 136


State 133

   43 Stmt: WHILE LPAREN Exp . RPAREN Stmt

    RPAREN  shift, and go to state 137


State 134

   18 VarDecl: BType VarDef SEMI .

    $default  reduce using rule 18 (VarDecl)


State 135

   35 Stmt: LVal ASSIGN Exp . SEMI

    SEMI  shift, and go to state 138


State 136

   41 Stmt: IF LPAREN Exp RPAREN . Stmt
   42     | IF LPAREN Exp RPAREN . Stmt ELSE Stmt

    IDENT      shift, and go to state 33
    RETURN     shift, and go to state 81
    IF         shift, and go to state 82
    WHILE      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    BREAK      shift, and go to state 85
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    SEMI       shift, and go to state 86
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    LBRACE     shift, and go to state 58
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    Block       go to state 91
    Stmt        go to state 139
    Exp         go to state 94
    LVal        go to state 95
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 137

   43 Stmt: WHILE LPAREN Exp RPAREN . Stmt

    IDENT      shift, and go to state 33
    RETURN     shift, and go to state 81
    IF         shift, and go to state 82
    WHILE      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    BREAK      shift, and go to state 85
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    SEMI       shift, and go to state 86
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    LBRACE     shift, and go to state 58
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    Block       go to state 91
    Stmt        go to state 140
    Exp         go to state 94
    LVal        go to state 95
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 138

   35 Stmt: LVal ASSIGN Exp SEMI .

    $default  reduce using rule 35 (Stmt)


State 139

   41 Stmt: IF LPAREN Exp RPAREN Stmt .
   42     | IF LPAREN Exp RPAREN Stmt . ELSE Stmt

    ELSE  shift, and go to state 141

    ELSE      [reduce using rule 41 (Stmt)]
    $default  reduce using rule 41 (Stmt)


State 140

   43 Stmt: WHILE LPAREN Exp RPAREN Stmt .

    $default  reduce using rule 43 (Stmt)


State 141

   42 Stmt: IF LPAREN Exp RPAREN Stmt ELSE . Stmt

    IDENT      shift, and go to state 33
    RETURN     shift, and go to state 81
    IF         shift, and go to state 82
    WHILE      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    BREAK      shift, and go to state 85
    ADD        shift, and go to state 34
    SUB        shift, and go to state 35
    SEMI       shift, and go to state 86
    COMMA      shift, and go to state 36
    LPAREN     shift, and go to state 37
    LBRACE     shift, and go to state 58
    INT_CONST  shift, and go to state 38
    '!'        shift, and go to state 39

    Block       go to state 91
    Stmt        go to state 142
    Exp         go to state 94
    LVal        go to state 95
    PrimaryExp  go to state 43
    Number      go to state 44
    UnaryExp    go to state 45
    UnaryOp     go to state 46
    MulExp      go to state 47
    AddExp      go to state 48
    RelExp      go to state 49
    EqExp       go to state 50
    LAndExp     go to state 51
    LOrExp      go to state 52


State 142

   42 Stmt: IF LPAREN Exp RPAREN Stmt ELSE Stmt .

    $default  reduce using rule 42 (Stmt)
